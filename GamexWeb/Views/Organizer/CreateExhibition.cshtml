@model GamexService.ViewModel.CreateExhibitionViewModel

@{
    ViewBag.Title = "Create Exhibition";
    ViewBag.CreateExhibition = "active";
    ViewBag.ManageExhibition = "active";
    ViewBag.ManageExhibitionDropDownShow = "show";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

@section ckeditor
{
    @Scripts.Render("~/bundles/ckeditor")
}

@section mapapi 
{
    


<script>
    var autoComplete, placeSearch;

    function initAutocomplete() {
        // Create the autocomplete object, restricting the search predictions to
        // geographical location types.
        autocomplete = new google.maps.places.Autocomplete(
            document.getElementById('Address'), { types: ['geocode'] });

        // Avoid paying for data that you don't need by restricting the set of
        // place fields that are returned to just the address components.
        autocomplete.setFields('formatted_address');

        // When the user selects an address from the drop-down, populate the
        // address fields in the form.
        autocomplete.addListener('place_changed', function() {
            var place = autocomplete.getPlace();
            if (!place.geometry) {
                // User entered the name of a Place that was not suggested and
                // pressed the Enter key, or the Place Details request failed.
                return;
            }
            var lat = place.geometry.location.lat(),
                lng = place.geometry.location.lng();
            
        });
    }

    
</script>
<script async defer

            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAIoukIzC-C6u_3Ww5G-M2fbnYX5-24ZfA&libraries=places&callback=initAutocomplete">
</script>
}

@section scripts
{
    @Scripts.Render("~/bundles/validateFile");
}

<div class="container-fluid">
    <!-- Breadcrumbs-->
    <ol class="breadcrumb">
        <li class="breadcrumb-item active">Create Exhibition</li>
    </ol>

    <!-- DataTables Card-->
    <div class="card mb-3">
        <div class="card-header">
            <i class="fas fa-fw fa-sliders-h menu-icon"></i> Create Exhibition
        </div>
        <div class="card-body">
            @using (Html.BeginForm("CreateExhibition", "Organizer", FormMethod.Post, new
            {
                @id = "CreateExhibitionForm",
                @enctype = "multipart/form-data"
            }))
            {
                @Html.AntiForgeryToken()
                <div class="row for-exhibition-form">
                    <div class="col-sm-12 col-md-8 col-lg-8">
                        @Html.LabelFor(m => m.Name)
                        @Html.TextBoxFor(m => m.Name, new
                        {
                            @class = "form-control form-control-sm"
                        })
                        @Html.ValidationMessageFor(m => m.Name)
                    </div>
                </div>

                <div class="row for-exhibition-form">
                    <div class="col-sm-12 col-md-8 col-lg-8 custom-file">
                        @Html.LabelFor(m => m.Logo)
                        <div class="custom-file" lang="es">
                            @Html.TextBoxFor(m => m.Logo, new
                            {
                                @class = "custom-file-input",
                                @type = "file",
                                accept = "image/*"
                            })
                            <label style="border-color: #ccc !important" class="custom-file-label" for="Logo">Choose file</label>
                        </div>
                        @Html.ValidationMessageFor(m => m.Logo)
                        <div id="fileUploadResult" class="text-danger"></div>
                    </div>
                </div>
                <br />

                <div class="row for-exhibition-form">
                    <div class="col-sm-12 col-md-8 col-lg-8">
                        <img alt="" id="imagePreview" />
                    </div>
                </div>
                <br />

                <div class="row for-exhibition-form">
                    <div class="col-sm-12 col-md-6 col-lg-6">
                        @Html.LabelFor(m => m.StartDate)
                        @Html.TextBoxFor(m => m.StartDate, new
                        {
                            @type = "date",
                            @class = "form-control form-control-sm",
                            @min = ""
                        })
                        @Html.ValidationMessageFor(m => m.StartDate)
                    </div>

                    <div class="col-sm-12 col-md-6 col-lg-6">
                        @Html.LabelFor(m => m.EndDate)
                        @Html.TextBoxFor(m => m.EndDate, new
                        {
                            @type = "date",
                            @class = "form-control form-control-sm",
                            @min = "",
                        })
                        @Html.ValidationMessageFor(m => m.EndDate)
                    </div>
                </div>

                <div class="row for-exhibition-form">
                    <div class="col-sm-12 col-md-12 col-lg-12">
                        @Html.LabelFor(m => m.Address)
                        @Html.TextBoxFor(m => m.Address, new
                        {
                            @class = "form-control form-control-sm",
                        })
                        @Html.ValidationMessageFor(m => m.Address)
                    </div>
                </div>

                <div class="row for-exhibition-form">
                    <div class="col-sm-12 col-md-12 col-lg-12">
                        @Html.LabelFor(m => m.Description)
                        @Html.ValidationMessageFor(m => m.Description)
                        <textarea id="Description" name="Description" class="form-control text-editor" rows="10" cols="80"> 
                             @if (Model != null) 
                             { 
                                 @Html.Raw(HttpUtility.HtmlDecode(Model.Description)) 
                             } 
                         </textarea>
                        <script>
                            CKEDITOR.replace('Description', {
                                htmlEncodeOutput: true
                            });
                        </script>
                    </div>
                </div>
                @Html.TextBoxFor(m => m.Latitude, new
                {
                    @type = "hidden",

                }) 
                <hr />
                <div class="row for-exhibition-form">
                    <div class="col-sm-12 col-lg-12">
                        <button type="submit" class="btn btn-outline-success" onclick="clearFileError()">Create</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
