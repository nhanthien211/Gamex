@model GamexService.ViewModel.CreateExhibitionViewModel

@{
    ViewBag.Title = "Create Exhibition";
    ViewBag.CreateExhibition = "active";
    ViewBag.ManageExhibition = "active";
    ViewBag.ManageExhibitionDropDownShow = "show";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

@section ckeditor
{
    @Scripts.Render("~/bundles/ckeditor")
}

@section mapapi
{
    <script type="text/javascript" src="~/Scripts/map.helper.js"></script>
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAIoukIzC-C6u_3Ww5G-M2fbnYX5-24ZfA&libraries=places&callback=initAutocomplete">
    </script>
}

@section scripts
{
    @Scripts.Render("~/bundles/validateFile")
    @if (Model != null)
    {
        if (Model.IsSuccessful != null)
        {
            if (Model.IsSuccessful.Value)
            {
                <script type="text/javascript">
                    $('#successModal').modal();
                </script>
            }
            else
            {
                <script type="text/javascript">
                    $('#failModal').modal();
                </script>
            }
        }
    }
}

<div class="container-fluid">
    <!-- Breadcrumbs-->
    <ol class="breadcrumb">
        <li class="breadcrumb-item active">Create Exhibition</li>
    </ol>

    <!-- DataTables Card-->
    <div class="card mb-3">
        <div class="card-header">
            <i class="fas fa-fw fa-sliders-h menu-icon"></i> Create Exhibition
        </div>
        <div class="card-body">
            @using (Html.BeginForm("CreateExhibition", "Organizer", FormMethod.Post, new
            {
                @id = "CreateExhibitionForm",
                @enctype = "multipart/form-data"
                //                onSubmit = "return checkAddress()"
            }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary()
                <div class="row for-exhibition-form">
                    <div class="col-sm-12 col-md-8 col-lg-8">
                        @Html.LabelFor(m => m.Name)
                        @Html.TextBoxFor(m => m.Name, new
                        {
                            @class = "form-control form-control-sm"
                        })
                        @Html.ValidationMessageFor(m => m.Name)
                    </div>
                </div>

                <div class="row for-exhibition-form">
                    <div class="col-sm-12 col-md-8 col-lg-8 custom-file">
                        @Html.LabelFor(m => m.Logo)
                        <div class="custom-file" lang="es">
                            @Html.TextBoxFor(m => m.Logo, new
                            {
                                @class = "custom-file-input",
                                @type = "file",
                                accept = "image/*"
                            })
                            <label style="border-color: #ccc !important" class="custom-file-label" for="Logo">Choose file</label>
                        </div>
                        @Html.ValidationMessageFor(m => m.Logo)
                        <div id="fileUploadResult" class="text-danger"></div>
                    </div>
                </div>
                <br />

                <div class="row for-exhibition-form">
                    <div class="col-sm-12 col-md-8 col-lg-8">
                        <img alt="" id="imagePreview" />
                    </div>
                </div>
                <br />

                <div class="row for-exhibition-form">
                    <div class="col-sm-12 col-md-6 col-lg-6">
                        @Html.LabelFor(m => m.StartDate)
                        @Html.TextBoxFor(m => m.StartDate, new
                        {
                            @type = "date",
                            @class = "form-control form-control-sm",
                            @min = ""
                        })
                        @Html.ValidationMessageFor(m => m.StartDate)
                    </div>

                    <div class="col-sm-12 col-md-6 col-lg-6">
                        @Html.LabelFor(m => m.EndDate)
                        @Html.TextBoxFor(m => m.EndDate, new
                        {
                            @type = "date",
                            @class = "form-control form-control-sm",
                            @min = "",
                        })
                        @Html.ValidationMessageFor(m => m.EndDate)
                    </div>
                </div>

                <div class="row for-exhibition-form">
                    <div class="col-sm-12 col-md-12 col-lg-12">
                        @Html.LabelFor(m => m.Address)
                        @Html.TextBoxFor(m => m.Address, new
                        {
                            @class = "form-control form-control-sm",
                        })
                        @Html.ValidationMessageFor(m => m.Address)
                    </div>
                </div>

                <div class="row for-exhibition-form">
                    <div class="col-sm-12 col-md-12 col-lg-12">
                        @Html.LabelFor(m => m.Description)
                        @Html.ValidationMessageFor(m => m.Description)
                        <textarea id="Description" name="Description" class="form-control text-editor" rows="10" cols="80"> 
                             @if (Model != null) 
                             { 
                                 @Html.Raw(HttpUtility.HtmlDecode(Model.Description)) 
                             } 
                         </textarea>
                        <script>
                            CKEDITOR.replace('Description', {
                                htmlEncodeOutput: true
                            });
                        </script>
                    </div>
                </div>
                @Html.TextBoxFor(m => m.Latitude, new
                {
                    @type = "hidden"
                })
                @Html.TextBoxFor(m => m.Longitude, new
                {
                    @type = "hidden"
                })
                <hr />
                <div class="row for-exhibition-form">
                    <div class="col-sm-12 col-lg-12">
                        <button type="submit" class="btn btn-outline-success" onclick="clearFileError()">Create</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<div id="successModal" class="modal fade">
    <div class="modal-dialog modal-confirm">
        <div class="modal-content">
            <div class="modal-header">
                <div class="icon-box-success">
                    <i class="fas fa-check"></i>
                </div>
                <h4 class="modal-title">Success!</h4>
            </div>
            <div class="modal-body">
                <p class="text-center">Create successfully</p>
            </div>
            <div class="modal-footer">
                <button class="btn btn-success btn-block" data-dismiss="modal">OK</button>
            </div>
        </div>
    </div>
</div>

<div id="failModal" class="modal fade">
    <div class="modal-dialog modal-confirm">
        <div class="modal-content">
            <div class="modal-header">
                <div class="icon-box-fail">
                    <i class="fas fa-times"></i>
                </div>
                <h4 class="modal-title">Error!</h4>
            </div>
            <div class="modal-body">
                <p class="text-center">Create unsuccessfully</p>
                <p class="text-center">Please try again later</p>
            </div>
            <div class="modal-footer">
                <button class="btn btn-danger btn-block" data-dismiss="modal">OK</button>
            </div>
        </div>
    </div>
</div>